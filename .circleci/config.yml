# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/php:7.2.8-node-browsers

    steps:
      - checkout

      - run: sudo apt update
      - run: sudo docker-php-ext-install zip

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-

      - run: yarn install

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules

      # test php code quality
      - run: ./vendor/squizlabs/php_codesniffer/bin/phpcs --config-set default_standard PSR2
      - run: ./vendor/squizlabs/php_codesniffer/bin/phpcs --config-set show_warnings 0
      - run: ./vendor/squizlabs/php_codesniffer/bin/phpcs --config-set show_progress 1
      - run: ./vendor/squizlabs/php_codesniffer/bin/phpcs --config-set colors 1
      - run: ./vendor/squizlabs/php_codesniffer/bin/phpcs --ignore=*vendor/*,*node_modules/*,*/database/*,*tests/*,*storage/*,*cache/*,*.css,*.js .

      # prepare the database
      - run: touch database/larapoints_test.sqlite
      - run: php artisan migrate --env=testing --database=larapoints_test --force

      # run tests with phpunit or codecept
      #- run: ./vendor/bin/phpunit
      - run: ./vendor/bin/codecept bootstrap
      - run: ./vendor/bin/codecept build
      - run: ./vendor/bin/codecept run